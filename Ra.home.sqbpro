<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/ivan.lee.PRIMECREATION/Documents/ivan/Projects source/Others/h/Ra_calculate/Ra.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="3982"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainresult5"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Cache" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="0" value="130"/><column index="1" value="69"/><column index="2" value="156"/><column index="3" value="156"/><column index="4" value="156"/><column index="5" value="156"/><column index="6" value="156"/><column index="7" value="156"/><column index="8" value="156"/><column index="9" value="156"/><column index="10" value="156"/><column index="11" value="156"/><column index="12" value="156"/><column index="13" value="156"/><column index="14" value="156"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="NorRaw" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="106"/><column index="2" value="52"/><column index="3" value="75"/><column index="4" value="75"/><column index="5" value="75"/><column index="6" value="147"/><column index="7" value="165"/><column index="8" value="70"/><column index="9" value="174"/><column index="10" value="72"/><column index="11" value="174"/><column index="12" value="85"/><column index="13" value="183"/><column index="14" value="74"/><column index="15" value="174"/><column index="16" value="165"/><column index="17" value="59"/><column index="18" value="69"/><column index="19" value="67"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="RaceCard" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="1"/></sort><column_widths><column index="1" value="91"/><column index="2" value="53"/><column index="3" value="64"/><column index="4" value="116"/><column index="5" value="95"/><column index="6" value="52"/><column index="7" value="52"/><column index="8" value="100"/><column index="9" value="64"/><column index="10" value="52"/><column index="11" value="59"/><column index="12" value="64"/><column index="13" value="52"/><column index="14" value="61"/><column index="15" value="156"/><column index="16" value="89"/><column index="17" value="64"/><column index="18" value="52"/><column index="19" value="64"/><column index="20" value="52"/><column index="21" value="64"/><column index="22" value="92"/><column index="23" value="101"/><column index="24" value="285"/><column index="25" value="130"/><column index="26" value="127"/><column index="27" value="64"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Rand" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="60"/><column index="2" value="75"/><column index="3" value="58"/><column index="4" value="75"/><column index="5" value="75"/><column index="6" value="87"/><column index="7" value="75"/><column index="8" value="91"/><column index="9" value="68"/><column index="10" value="82"/><column index="11" value="150"/><column index="12" value="75"/><column index="13" value="52"/><column index="14" value="52"/><column index="15" value="87"/><column index="16" value="82"/><column index="17" value="52"/><column index="18" value="75"/><column index="19" value="82"/><column index="20" value="52"/><column index="21" value="77"/><column index="22" value="82"/><column index="23" value="113"/><column index="24" value="82"/><column index="25" value="52"/><column index="26" value="82"/><column index="27" value="52"/><column index="28" value="82"/><column index="29" value="118"/><column index="30" value="109"/><column index="31" value="273"/><column index="32" value="164"/><column index="33" value="161"/><column index="34" value="82"/><column index="35" value="77"/><column index="36" value="84"/><column index="37" value="52"/><column index="38" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Raw" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="106"/><column index="2" value="52"/><column index="3" value="75"/><column index="4" value="75"/><column index="5" value="75"/><column index="6" value="52"/><column index="7" value="57"/><column index="8" value="57"/><column index="9" value="63"/><column index="10" value="67"/><column index="11" value="69"/><column index="12" value="52"/><column index="13" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="cw" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="57"/><column index="2" value="69"/><column index="3" value="147"/><column index="4" value="183"/><column index="5" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="h" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="140"/><column index="2" value="116"/><column index="3" value="209"/><column index="4" value="223"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="h_t3" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="75"/><column index="2" value="130"/><column index="3" value="165"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="p" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="69"/><column index="3" value="147"/><column index="4" value="165"/><column index="5" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="preNor" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="68"/><column index="3" value="147"/><column index="4" value="147"/><column index="5" value="147"/><column index="6" value="147"/><column index="7" value="147"/><column index="8" value="147"/><column index="9" value="156"/><column index="10" value="156"/><column index="11" value="156"/><column index="12" value="165"/><column index="13" value="156"/><column index="14" value="156"/><column index="15" value="84"/><column index="16" value="75"/><column index="17" value="68"/><column index="18" value="64"/><column index="19" value="57"/><column index="20" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="preventnull" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="68"/><column index="3" value="60"/><column index="4" value="147"/><column index="5" value="147"/><column index="6" value="147"/><column index="7" value="52"/><column index="8" value="147"/><column index="9" value="147"/><column index="10" value="147"/><column index="11" value="165"/><column index="12" value="156"/><column index="13" value="156"/><column index="14" value="57"/><column index="15" value="156"/><column index="16" value="165"/><column index="17" value="156"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="r" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="116"/><column index="3" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="r_t3" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="123"/><column index="3" value="165"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="result1" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="0" value="174"/><column index="1" value="174"/><column index="2" value="174"/><column index="3" value="174"/><column index="4" value="174"/><column index="5" value="174"/><column index="6" value="174"/><column index="7" value="174"/><column index="8" value="174"/><column index="9" value="174"/><column index="10" value="174"/><column index="11" value="174"/><column index="12" value="174"/><column index="13" value="174"/><column index="14" value="174"/><column index="15" value="174"/><column index="16" value="174"/><column index="17" value="174"/><column index="18" value="174"/><column index="19" value="174"/><column index="20" value="174"/><column index="21" value="174"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="result2" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="0" value="116"/><column index="1" value="116"/><column index="2" value="116"/><column index="3" value="116"/><column index="4" value="116"/><column index="5" value="116"/><column index="6" value="116"/><column index="7" value="188"/><column index="8" value="157"/><column index="9" value="165"/><column index="10" value="156"/><column index="11" value="156"/><column index="12" value="156"/><column index="13" value="165"/><column index="14" value="165"/><column index="15" value="165"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="result3" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="0" value="137"/><column index="1" value="137"/><column index="2" value="137"/><column index="3" value="137"/><column index="4" value="137"/><column index="5" value="137"/><column index="6" value="137"/><column index="7" value="226"/><column index="8" value="203"/><column index="9" value="252"/><column index="10" value="165"/><column index="11" value="165"/><column index="12" value="165"/><column index="13" value="165"/><column index="14" value="156"/><column index="15" value="188"/><column index="16" value="200"/><column index="17" value="165"/><column index="18" value="174"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="result4" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="52"/><column index="3" value="59"/><column index="4" value="116"/><column index="5" value="130"/><column index="6" value="75"/><column index="7" value="156"/><column index="8" value="156"/><column index="9" value="59"/><column index="10" value="116"/><column index="11" value="130"/><column index="12" value="123"/><column index="13" value="130"/><column index="14" value="130"/><column index="15" value="116"/><column index="16" value="123"/><column index="17" value="123"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="result5" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="52"/><column index="3" value="57"/><column index="4" value="75"/><column index="5" value="58"/><column index="6" value="59"/><column index="7" value="156"/><column index="9" value="165"/><column index="11" value="165"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="result6" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="0" value="165"/><column index="1" value="165"/><column index="2" value="165"/><column index="3" value="165"/><column index="4" value="165"/><column index="5" value="165"/><column index="6" value="165"/><column index="7" value="165"/><column index="8" value="165"/><column index="9" value="165"/><column index="10" value="165"/><column index="11" value="165"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="rw" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="69"/><column index="3" value="147"/><column index="4" value="174"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="rww" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="110"/><column index="2" value="69"/><column index="3" value="147"/><column index="4" value="174"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="t" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="92"/><column index="2" value="69"/><column index="3" value="147"/><column index="4" value="174"/><column index="5" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="wb" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="69"/><column index="3" value="147"/><column index="4" value="174"/><column index="5" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Predict_3.3.sql">
DROP TABLE IF EXISTS Raw; -- calculate the whole race
CREATE TABLE Raw AS
with a as (
	SELECT 
		LocalResults.dt,
		CAST( REPLACE(名次,' ','') AS INTEGER ) o,
		case when instr(馬名, '(')&gt;=1 then (substr(馬名, 0, instr(馬名, '('))) else 馬名 end h,
		case when instr(騎師, '(')&gt;=1 then (substr(騎師, 0, instr(騎師, '('))) else 騎師 end r,
		case when instr(練馬師, '(')&gt;=1 then (substr(練馬師, 0, instr(練馬師, '('))) else 練馬師 end t,
		實際負磅*1.0 rw,-- real weight (just horse)
		排位體重*1.0 cw,-- comparitive weight (horse with rider and wearing)
		(排位體重-實際負磅)*1.0 rww,-- rider with weight
		完成時間 ct -- complete time
		,((substr(完成時間,0,instr(完成時間,':'))*60)+(substr(完成時間, instr(完成時間, ':')+1,length(完成時間)-1)))*1.0 dursec
		,meters*1.0 meters
		,獨贏賠率*1.0 wb -- win bounis
		,檔位*1.0 p
	from LocalResults, LocalResultsComInfo
	where o!=0 and LocalResults.dt=LocalResultsComInfo.dt
)
select 
	dt,o
	,(meters/dursec) mark --speed mark
	,h,r,t,rw,cw,rww,ct,dursec,meters,wb,p
from a
;

-- cw avg speed
DROP TABLE IF EXISTS cw; CREATE TABLE cw as 
WITH
a as (
	select 
		cw,
		meters,
		mark m 
	from Raw 
	where cw is not null and cw &gt; 0
)
,avg as (
	select 
		cw
		,meters
		,avg(m) avm
		,count(*) c 
	from a 
	group by cw,meters
)
,std as (
	select 
		a.cw,a.meters
		,avg.avm
		,sum(abs(avm-m))/count(*) dif
		,c
	from a,avg 
	where a.cw=avg.cw and a.meters=avg.meters 
	group by a.cw,a.meters
)
select * from std
;

-- rw avg speed
DROP TABLE IF EXISTS rw; CREATE TABLE rw as 
WITH
a as (
	select 
		rw,
		meters,
		mark m 
	from Raw 
	where rw is not null and rw &gt; 0
)
,avg as (
	select 
		rw
		,meters
		,avg(m) avm
		,count(*) c 
	from a 
	group by rw,meters
)
,std as (
	select 
		a.rw,a.meters
		,avg.avm
		,sum(abs(avm-m))/count(*) dif
		,c
	from a,avg 
	where a.rw=avg.rw and a.meters=avg.meters 
	group by a.rw,a.meters
)
select * from std
;

-- rww avg speed
DROP TABLE IF EXISTS rww; CREATE TABLE rww as 
WITH
a as (
	select 
		rww,
		meters,
		mark m 
	from Raw 
	where rww is not null and rww &gt; 0
)
,avg as (
	select 
		rww
		,meters
		,avg(m) avm
		,count(*) c 
	from a 
	group by rww,meters
)
,std as (
	select 
		a.rww,a.meters
		,avg.avm
		,sum(abs(avm-m))/count(*) dif
		,c
	from a,avg 
	where a.rww=avg.rww and a.meters=avg.meters 
	group by a.rww,a.meters
)
select * from std
;

-- p avg speed
DROP TABLE IF EXISTS p; CREATE TABLE p as 
WITH
a as (
	select 
		p,
		meters,
		mark m 
	from Raw 
	where p is not null and p &gt; 0
)
,avg as (
	select 
		p
		,meters
		,avg(m) avm
		,count(*) c 
	from a 
	group by p,meters
)
,std as (
	select 
		a.p,a.meters
		,avg.avm
		,sum(abs(avm-m))/count(*) dif
		,c
	from a,avg 
	where a.p=avg.p and a.meters=avg.meters 
	group by a.p,a.meters
)
select * from std
;

-- unit data cache
DROP TABLE IF EXISTS h; CREATE TABLE h as 
WITH
a as (
	select 
		h,
		meters,
		mark m 
	from Raw 
	where h is not null
)
,avg as (
	select 
		h
		,meters
		,avg(m) avm
		,count(*) c 
	from a 
	group by h,meters
)
,std as (
	select 
		a.h,a.meters
		,avg.avm
		,sum(abs(avm-m))/count(*) dif
		,c
	from a,avg 
	where a.h=avg.h and a.meters=avg.meters 
	group by a.h,a.meters
)
select * from std
;

DROP TABLE IF EXISTS r; CREATE TABLE r as 
WITH
a as (
	select 
		r,
		meters,
		mark m 
	from Raw 
	where r is not null
)
,avg as (
	select 
		r
		,meters
		,avg(m) avm
		,count(*) c 
	from a 
	group by r,meters
)
,std as (
	select 
		a.r,a.meters
		,avg.avm
		,sum(abs(avm-m))/count(*) dif
		,c
	from a,avg 
	where a.r=avg.r and a.meters=avg.meters 
	group by a.r,a.meters
)
select * from std
;

DROP TABLE IF EXISTS t; CREATE TABLE t as 
WITH
a as (
	select 
		t,
		meters,
		mark m 
	from Raw 
	where t is not null
)
,avg as (
	select 
		t
		,meters
		,avg(m) avm
		,count(*) c 
	from a 
	group by t,meters
)
,std as (
	select 
		a.t,a.meters
		,avg.avm
		,sum(abs(avm-m))/count(*) dif
		,c
	from a,avg 
	where a.t=avg.t and a.meters=avg.meters 
	group by a.t,a.meters
)
select * from std
;

--上名率
DROP TABLE IF EXISTS h_t3; CREATE TABLE h_t3 AS 
WITH 
a as (select h,meters,count(*) a from Raw group by h,meters)
,c as (select h,meters,count(*) c from Raw where o &lt;=4 group by h,meters)
select a.h,a.meters,c*1.0/a a from a,c where a.h=c.h and a.meters=c.meters
;
DROP TABLE IF EXISTS r_t3; CREATE TABLE r_t3 AS 
WITH 
a as (select r,meters,count(*) a from Raw group by r,meters)
,c as (select r,meters,count(*) c from Raw where o &lt;=4 group by r,meters)
select a.r,a.meters,c*1.0/a a from a,c where a.r=c.r and a.meters=c.meters
;
DROP TABLE IF EXISTS t_t3; CREATE TABLE t_t3 AS 
WITH 
a as (select t,meters,count(*) a from Raw group by t,meters)
,c as (select t,meters,count(*) c from Raw where o &lt;=4 group by t,meters)
select a.t,a.meters,c*1.0/a a from a,c where a.t=c.t and a.meters=c.meters
;

-- calculation begin - data preprocess
DROP TABLE IF EXISTS Rand;
CREATE TABLE Rand as 
	select --潘明輝(-2)
		meter*1.0 meter,
		case when instr(馬名, '(')&gt;=1 then (substr(馬名, 0, instr(馬名, '('))) else 馬名 end h,
		case when instr(騎師, '(')&gt;=1 then (substr(騎師, 0, instr(騎師, '('))) else 騎師 end r,
		case when instr(練馬師, '(')&gt;=1 then (substr(練馬師, 0, instr(練馬師, '('))) else 練馬師 end t,
		馬名 h,
		騎師 r,
		練馬師 t,
		b.*,
		今季獎金*1.0 wb,
		負磅*1.0 rw,
		檔位*1.0 p
	from RaceCard b
	where dt=(select dt from RaceCard order by dt desc limit 1)
;


-- Prevent no records
DROP TABLE IF EXISTS preventnull;
CREATE TABLE preventnull as 
	select 
		dt,raceno,meter
		,(select avg(b.avm) from h b where b.avm&gt;0 and a.meter=b.meters) ahavo
		,(select avg(b.avm) from r b where b.avm&gt;0 and a.meter=b.meters) aravo
		,(select avg(b.avm) from t b where b.avm&gt;0 and a.meter=b.meters) atavo
		,(select avg(b.avm) from wb b where b.avm&gt;0) wb
		,(select avg(b.avm) from rw b where b.avm&gt;0 and a.meter=b.meters) rw
		,(select avg(b.avm) from rww b where b.avm&gt;0 and a.meter=b.meters) rww
		,(select avg(b.avm) from p b where b.avm&gt;0 and a.meter=b.meters) p
		
		,(select avg(b.dif) from h b where b.avm&gt;0 and a.meter=b.meters) ahavo_e
		,(select avg(b.dif) from r b where b.avm&gt;0 and a.meter=b.meters) aravo_e
		,(select avg(b.dif) from t b where b.avm&gt;0 and a.meter=b.meters) atavo_e
		,(select avg(b.dif) from wb b where b.avm&gt;0) wb_e
		,(select avg(b.dif) from rw b where b.avm&gt;0 and a.meter=b.meters) rw_e
		,(select avg(b.dif) from rww b where b.avm&gt;0 and a.meter=b.meters) rww_e
		,(select avg(b.dif) from p b where b.avm&gt;0 and a.meter=b.meters) p_e
	from Rand a
	group by dt,raceno,meter
;

-- calculation begin - data preprocess
DROP TABLE IF EXISTS result1;
CREATE TABLE result1 as 
select 
	Rand.dt,
	Rand.meter,
	(Rand.raceno+0)*1.0 raceno
	,Rand.h,Rand.r,Rand.t
	,ifnull((select avm from h where h.h like '%'||Rand.h||'%' and h.meters&lt;=Rand.meter order by h.meters desc limit 1),
		ifnull((select avm from h where h.h like '%'||Rand.h||'%' and h.meters&gt;Rand.meter order by h.meters asc limit 1),
			ahavo
		)
	) havo
	,ifnull((select avm from r where r.r like '%'||Rand.r||'%' and r.meters&lt;=Rand.meter order by r.meters desc limit 1),
		ifnull((select avm from r where r.r like '%'||Rand.r||'%' and r.meters&gt;Rand.meter order by r.meters asc limit 1),
			aravo
		)
	) ravo
	,ifnull((select avm from t where t.t like '%'||Rand.t||'%' and t.meters&lt;=Rand.meter order by t.meters desc limit 1),
		ifnull((select avm from t where t.t like '%'||Rand.t||'%' and t.meters&gt;Rand.meter order by t.meters asc limit 1),
			atavo
		)
	) tavo
	,ifnull((select avm from wb where wb.wb&lt;=Rand.wb and wb.meters&lt;=Rand.meter order by wb.meters desc limit 1),
		ifnull((select avm from wb where wb.wb&gt;Rand.wb and wb.meters&gt;Rand.meter order by wb.meters asc limit 1),
			preventnull.wb
		)
	) wb
	,ifnull((select avm from rw where rw.rw=Rand.rw and rw.meters&lt;=Rand.meter order by rw.meters desc limit 1),
		ifnull((select avm from rw where rw.rw=Rand.rw and rw.meters&gt;Rand.meter order by rw.meters asc limit 1),
			preventnull.rw
		)
	) rw
	,ifnull((select avm from p where p.p=Rand.p and p.meters&lt;=Rand.meter order by p.meters desc limit 1),
		ifnull((select avm from p where p.p=Rand.p and p.meters&gt;Rand.meter order by p.meters asc limit 1),
			preventnull.p
		)
	) p
	
	
	,1-ifnull((select dif from h where h.h like '%'||Rand.h||'%' and h.meters&lt;=Rand.meter order by h.meters desc limit 1),
		ifnull((select dif from h where h.h like '%'||Rand.h||'%' and h.meters&gt;Rand.meter order by h.meters asc limit 1),
			ahavo_e
		)
	) havo_e
	,1-ifnull((select dif from r where r.r like '%'||Rand.r||'%' and r.meters&lt;=Rand.meter order by r.meters desc limit 1),
		ifnull((select dif from r where r.r like '%'||Rand.r||'%' and r.meters&gt;Rand.meter order by r.meters asc limit 1),
			aravo_e
		)
	) ravo_e
	,1-ifnull((select dif from t where t.t like '%'||Rand.t||'%' and t.meters&lt;=Rand.meter order by t.meters desc limit 1),
		ifnull((select dif from t where t.t like '%'||Rand.t||'%' and t.meters&gt;Rand.meter order by t.meters asc limit 1),
			atavo_e
		)
	) tavo_e
	,1-ifnull((select dif from wb where wb.wb&gt;=Rand.wb and wb.meters&lt;=Rand.meter order by wb.meters desc limit 1),
		ifnull((select dif from wb where wb.wb&lt;=Rand.wb and wb.meters&gt;Rand.meter order by wb.meters asc limit 1),
			wb_e
		)
	) wb_e
	,1-ifnull((select dif from rw where rw.rw=Rand.rw and rw.meters&lt;=Rand.meter order by rw.meters desc limit 1),
		ifnull((select dif from rw where rw.rw=Rand.rw and rw.meters&gt;Rand.meter order by rw.meters asc limit 1),
			rw_e
		)
	) rw_e
	,1-ifnull((select dif from p where p.p=Rand.p and p.meters&lt;=Rand.meter order by p.meters desc limit 1),
		ifnull((select dif from p where p.p=Rand.p and p.meters&gt;Rand.meter order by p.meters asc limit 1),
			p_e
		)
	) p_e
	
	
	
	,ifnull((select a from h_t3 where h_t3.h=Rand.h and h_t3.meters&lt;=Rand.meter order by h_t3.meters desc limit 1),
		ifnull((select a from h_t3 where h_t3.h=Rand.h and h_t3.meters&gt;Rand.meter order by h_t3.meters asc limit 1),
			0
		)
	) h3t
	,ifnull((select a from r_t3 where r_t3.r=Rand.r and r_t3.meters&lt;=Rand.meter order by r_t3.meters desc limit 1),
		ifnull((select a from r_t3 where r_t3.r=Rand.r and r_t3.meters&gt;Rand.meter order by r_t3.meters asc limit 1),
			0
		)
	) r3t
	,ifnull((select a from t_t3 where t_t3.t=Rand.h and t_t3.meters&lt;=Rand.meter order by t_t3.meters desc limit 1),
		ifnull((select a from t_t3 where t_t3.t=Rand.t and t_t3.meters&gt;Rand.meter order by t_t3.meters asc limit 1),
			0
		)
	) t3t
from 
	Rand,preventnull
where Rand.dt=preventnull.dt and Rand.raceno=preventnull.raceno
group by Rand.dt,Rand.raceno,Rand.h
;

-- normalization
DROP TABLE IF EXISTS result2;
CREATE TABLE result2 as 
with
a as (
	select 
		*
		,(havo_e+ravo_e+tavo_e) sum_t3_e
		,(havo_e+ravo_e+tavo_e+wb_e+rw_e+p_e) sum_e
	from result1
)
select 
	*
	,h3t/sum_t3_e havo_t3_e
	,r3t/sum_t3_e ravo_t3_e
	,t3t/sum_t3_e tavo_t3_e
	,havo_e/sum_e havo_e
	,ravo_e/sum_e ravo_e
	,tavo_e/sum_e tavo_e
	,wb_e/sum_e wb_e
	,rw_e/sum_e rw_e
	,p_e/sum_e p_e
from a
;

-- naming and translation
DROP TABLE IF EXISTS result3;
CREATE TABLE result3 as 
	select 
		dt 日期,
		raceno 埸次,
		meter 路程,
		h 馬,
		r 騎師,
		t 訓練師,
		result2.havo*havo_e 馬勝率,
		result2.ravo*ravo_e 騎師勝率,
		result2.tavo*tavo_e 訓練師勝率,
		result2.p*p_e 排位勝率,
		result2.rw*rw_e 馬負磅勝率, -- case when rw=0 then 0.1 else rw end
		result2.wb*wb_e 賠率勝率, -- case when wb=0 then 0.1 else wb end
		result2.h3t*havo_t3_e 馬上名率,
		result2.r3t*ravo_t3_e 騎師上名率,
		result2.t3t*tavo_t3_e 訓練師上名率
	from result2
;

-- second integrate various kinds of rate
DROP TABLE IF EXISTS result4;
CREATE TABLE result4 as 
select
	日期,埸次,
	路程,
	馬,
	騎師,
	訓練師,
	(馬勝率+騎師勝率+訓練師勝率+排位勝率+馬負磅勝率) 綜合勝率,
	(馬上名率+騎師上名率+訓練師上名率) 上名率
from result3
-- where 埸次 in (4,5,6)
order by 日期 desc,埸次 asc,綜合勝率 desc;

-- ranking sorting and indication
DROP TABLE IF EXISTS result5;
CREATE TABLE result5 as 
select
	日期,埸次
	,路程
	,馬
	,騎師
	,訓練師
	,綜合勝率,(ROW_NUMBER () OVER (Partition by 日期,埸次 ORDER BY 綜合勝率 desc)) 綜合勝率排名
	,上名率,(ROW_NUMBER () OVER (Partition by 日期,埸次 ORDER BY 上名率 desc)) 上名率排名
from result4
order by 日期 desc,埸次 asc,綜合勝率 desc;

DROP TABLE IF EXISTS result6;

commit;</sql><sql name="SQL 5">select avg(b.avm) from wb b where b.avm&gt;0 and a.meter=b.meters


		dt
		,meter
		,raceno
		,h,r,t
		
		,havo,ravo,tavo
		
		,wb,rw,p
		,h3t,r3t,t3t
		
		,havo_e,ravo_e,tavo_e
		,wb_e,rw_e,p_e</sql><current_tab id="0"/></tab_sql></sqlb_project>
